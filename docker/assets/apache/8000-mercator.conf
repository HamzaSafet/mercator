# URL: https://mercator.mydomain.com  -  
# SRC : https://github.com/dbarzin/mercator/

# redirect : 80 -> 443
<VirtualHost *:80>
        ServerName mercator.mydomain.com
        ServerAdmin admin@mydomain.com

        ErrorLog ${APACHE_LOG_DIR}/mercator-error.log
        CustomLog ${APACHE_LOG_DIR}/mercator.log combined

        # Enforce HTTPS:
        RewriteEngine On
        RewriteCond %{HTTPS} !=on
        RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]
</VirtualHost>

<VirtualHost *:443>
	ServerName mercator.mydomain.com
	ServerAdmin admin@mydomain.com

	ErrorLog ${APACHE_LOG_DIR}/mercator-error.log
	CustomLog ${APACHE_LOG_DIR}/mercator.log combined

	SSLCertificateFile      /etc/letsencrypt/live/mercator.mydomain.com/cert.pem
	SSLCertificateKeyFile   /etc/letsencrypt/live/mercator.mydomain.com/privkey.pem
	SSLCertificateChainFile /etc/letsencrypt/live/mercator.mydomain.com/fullchain.pem

    # Enable rewrite engine
    RewriteEngine on
    ProxyRequests Off

    # Make sure the original domain name is forwarded to Send
    # Otherwise the generated URLs will be wrong
    ProxyPreserveHost on

    # Make sure the generated URL is https://
    RequestHeader set X-Forwarded-Proto https

    # Otherwise redirect it to a normal HTTP connection
    RewriteRule ^/(.*)$ http://127.0.0.1:8000/$1 [P,QSA]
    ProxyPassReverse  "/" "http://127.0.0.1:8000"

    # contournement du bug https://github.com/mqu/mercator/issues/1
    # permet de transformer en live, dans les pages de code HTML, les liens de la forme http://mercator. -> https://mercator.
    <Location />
      ProxyHTMLEnable On
      ProxyHTMLURLMap http://mercator.kalif https://mercator.kalif
    </Location>


</VirtualHost>
Include /etc/apache2/conf-available/ssl-tls-strict.conf

# letsencrypt
# certbot --nginx --non-interactive --agree-tos --email admin@mydomain.com --no-eff-email --domain mercator.mydomain.com
